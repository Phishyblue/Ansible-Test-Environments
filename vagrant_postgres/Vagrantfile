# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  # boxes at https://vagrantcloud.com/search.
  config.vm.box = "bento/centos-8.2"
  # Configurations requiring the vagrant-vbguest plugin (github.com/dotless-de/vagrant-vbguest).
  config.vbguest.installer_options = { allow_kernel_upgrade: true }
  config.vbguest.installer_arguments = ["--nox11"]
  config.vbguest.installer_hooks[:before_install] = ["yum install -y https://dl.fedoraproject.org/pub/epel/epel-release-latest-8.noarch.rpm", "sleep 1"]

  # Disable automatic box update checking.
  config.vm.box_check_update = false

  # Share an additional folder to the guest VM.
  config.vm.synced_folder "./", "/vagrant", disabled: false

  config.vm.define "node1", primary: true do |node1|
    config.vm.provider "virtualbox" do |vb|
      vb.name = "postgres-testdb"
    end

    node1.vm.hostname = "postgres-testdb"
  
    # Create a forwarded port mapping which allows access to a specific port
    # within the machine from a port on the host machine.
    # config.vm.network "forwarded_port", guest: 80, host: 8080

    # Create a private network, which allows host-only access to the machine
    # using a specific IP.
    config.vm.network "private_network", ip: "192.168.50.3", :netmask => "255.255.0.0"
  end

  # Provider-specific configuration so you can fine-tune various
  # backing providers for Vagrant. These expose provider-specific options.
  # Example for VirtualBox:
  #
  # config.vm.provider "virtualbox" do |vb|
  #   # Display the VirtualBox GUI when booting the machine
  #   vb.gui = false
  #
  #   # Customize the amount of memory on the VM:
  #   vb.memory = "1024"
  # end

  # Enable provisioning with a shell script. Additional provisioners such as
  # Ansible, Chef, Docker, Puppet and Salt are also available. Please see the
  # documentation for more information about their specific syntax and use.
  config.vm.provision "shell", inline: <<-SHELL
    yum -y install kernel-devel
  SHELL
  config.vm.provision "shell", path: "../common/shell/sshd_passauth_yes.sh"
end
